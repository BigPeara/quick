<template>
    <div class="login">
        <div class="login-box">
            <!-- 手机快速登录 -->
            <div class="phone-login">
                <div>
                    <text class="phone-title">绑定手机号</text>
                </div>
                <div class="phone-detail phone-input">
                    <text class="phone-num">手机号:</text>
                    <input type="number" placeholder="请输入手机号" class="ws-input num-input" onchange="setMob">
                    <div class="btn-send" onclick="sendCode">
                        <text style="color:{{validate()?'#cbcbcb':'#f76c5b' }}">{{showText}}</text>
                    </div>
                </div>
                <div class="phone-detail">
                    <text class="phone-num">验证码:</text>
                    <input type="number" placeholder="请输入验证码" class="ws-input" onchange="setMobKey">
                </div>
                <div class="phone-detail">
                    <text class="phone-num">设置密码:</text>
                    <input type="password" placeholder="设置6-18位密码" class="ws-input" onchange="setPwd">
                </div>
            </div>

        </div>
        <!-- 登录按钮 -->
        <div class="login-choose">
            <div class="btn-login" onclick="boundMobile" style="background-color: {{mob.length==11&&mobKey.length==4&&pwd.length>=6?'#f76c5b':'#ffb1a8'}}">
                <text class="login-text">登录</text>
            </div>
            <div class="hint">
                <image src="../../Common/imgs/notice.png" class="noticeImg"></image>
                <text class="hint-text">为了您的账户安全，请先绑定手机号码</text>
            </div>

        </div>

    </div>

    </div>


</template>
<script>
    import api from '../../api/personData';
    import router from '@system.router'
    export default {
        data: {
            showText: "获取验证码",
            mob: '',
            mobKey: '',
            pwd: '' ,
            isSend: false,
        },
        sendCode() { //发送验证码
            if (!this.validate()) {
                this.showText = "发送中..."
                api.sendSmsAuthCode({ mob: this.mob, pType: '2' }).then(res => {
                    this.isSend = true;
                    this.showText = "已发送";
                    setTimeout(() => {
                        let num = 60
                        this.timer = setInterval((res => {
                            if (num == 0) {
                                this.isSend = false;
                                this.showText = '重新获取';
                                clearInterval(this.timer);
                                return;
                            }
                            num--;
                            this.showText = num + 's'
                        }), 1000)
                    }, 300)
                }, error => {
                    this.isSend = false;
                    this.showText = "重新获取"
                })
            }
        },
        validate() {
            return this.isSend || !(/^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\d{8}$/.test(this.mob));
        },
        isLogin(){
            return !this.validate() && this.mobKey.length == 4 && this.pwd.length>=6 && this.pwd.length<=18;
        },
        setMob(val) {
            this.mob = val.text
        },
        setMobKey(val) {
            this.mobKey = val.text
        },
        setPwd(val) {
            this.pwd = val.text;
        },
        boundMobile(){
            if (this.mob.length==11&&this.mobKey.length==4&&this.pwd.length>=6) {
                api.boundMobile({ mob: this.mob, mobKey: this.mobKey, pwd: this.pwd}).then(res => {
                    router.push({
                        uri: 'Index',
                        params: {
                            currentIndex: 2
                        }
                    })
                })
            }
        }
    }
</script>
<style scoped>
    /* justify-content: space-between; flex-direction: column;
    } */

    .login {
        padding: 0 30px;
        flex-direction: column;
        background-color: #ffffff;
    }

    .login-box {
        flex-direction: column;
    }

    .phone-login {
        flex-direction: column;
    }

    .phone-input {
        justify-content: space-between;

    }

    .phone-detail {
        padding: 20px 0;
        border-bottom-width: 1px;
        border-color: #e5e5e5;
        margin: 20px 0;

    }

    .num-input {
        flex: 1;
    }

    .phone-title {
        padding: 30px 0;
        width: 100%;
        text-align: center;
        font-size: 32px;
        color: #333333;
        font-weight: bold;
    }

    .num-login {
        flex-direction: column;
    }

    .phone-num {
        font-size: 30px;
        color: #333333;
    }

    .btn-send {
        font-size: 30px;
        color: #cbcbcb;
        padding-left: 15px;
        border-left-width: 1px;
        border-color: #cbcbcb;
        height: 50px;
        width: 180px;
        justify-content: center;
    }
    .btn-login {
        width: 100%;
        height: 74px;
        border-radius: 10px;
        background-color: #f76c5b;
        justify-content: center;
        align-items: center;
        /* background-color: #f76c5b; */
    }
    .login-text {
        font-size: 28px;
        color: #ffffff;
    }

    .ws-input {
        font-size: 30px;
        padding-left: 20px;
    }

    .login-choose {
        flex-direction: column;
    }

    .change-login {
        width: 100%;
        text-align: center;
        margin-top: 20px;
        color: #333333;
    }
    .hint{
        margin-top: 20px;
        height: 48px;
        width: 100%;
        justify-content: center;
        align-items: center;
 
    }
    .noticeImg{
        margin-right: 5px;
        width: 32px;
        height: 32px;
    }
    .hint-text{
       font-size: 32px;
       color:#c7c7c7;
    }
</style>